from aiogram.types import InputFile
from pathlib import Path
from keyboards.friend_inline_keyboard import friend_inline_keyboard
from keyboards.check_inline_keyboard import find_people_keyboard
from states import FriendState
import sqlite3



# –î–∞–Ω–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É "–ù–∞–π—Ç–∏ –¥—Ä—É–≥–∞" —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–∏—Å–∫–∞
def find_friend_handler_1(dp):
    @dp.message_handler(text="–ù–∞–π—Ç–∏ –¥—Ä—É–≥–∞")
    async def find_friend_handler(message):
        photo_info = InputFile(Path('pictures/friend.jpeg'))
        await message.answer_photo(
            photo_info,
            caption="üåç‚ú® –ù–∞–π–¥–∏ –¥—Ä—É–∑–µ–π –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π! üë´‚úàÔ∏è –û—Å—Ç–∞–ª–æ—Å—å —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏–π! üìù "
                    "–ó–∞–ø–æ–ª–Ω–∏ –¥–∞–Ω–Ω—ã–µ, –∏ —Ç—ã —Ç–æ—á–Ω–æ –Ω–∞–π–¥–µ—à—å –∫—Ä—É—Ç—ã—Ö –¥—Ä—É–∑–µ–π –¥–ª—è —Å–≤–æ–µ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è! üöÄüôå",
            reply_markup=friend_inline_keyboard
        )


def name_1(dp):
    @dp.callback_query_handler(text='finding')
    async def name(call):
        await call.message.answer(
            "–ö–∞–∫ –≤–∞—à–µ –∏–º—è?\n"
            '–ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω'
        )
        await FriendState.name.set()


def country_1(dp):
    @dp.message_handler(state=FriendState.name)
    async def country(message, state):
        await state.update_data(name=message.text)
        await message.answer(
            "–í –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω—É –≤—ã –æ—Ç–ø—Ä–∞–≤—è–ª–µ—Ç–µ—Å—å?\n"
            "–ü—Ä–∏–º–µ—Ä: –¢—É—Ä—Ü–∏—è"
        )
        await FriendState.country.set()


def city_1(dp):
    @dp.message_handler(state=FriendState.country)
    async def city(message, state):
        await state.update_data(country=message.text)
        await message.answer(
            "–í –∫–∞–∫–æ–π –≥–æ—Ä–æ–¥ –≤—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å?\n"
            '–ü—Ä–∏–º–µ—Ä: –°—Ç–∞–º–±—É–ª'
        )
        await FriendState.city.set()


def hotel_1(dp):
    @dp.message_handler(state=FriendState.city)
    async def hotel(message, state):
        await state.update_data(city=message.text)
        await message.answer(
            "–í –∫–∞–∫–æ–º –æ—Ç–µ–ª–µ –≤—ã –±—É–¥–µ—Ç–µ –ø—Ä–æ–∂–∏–≤–∞—Ç—å?\n"
            '–ü—Ä–∏–º–µ—Ä: Hotel Plaza'
        )
        await FriendState.hotel.set()


def phone_number_1(dp):
    @dp.message_handler(state=FriendState.hotel)
    async def phone_number(message, state):
        await state.update_data(hotel=message.text)
        await message.answer(
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n'
            '–§–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞: 89222222222'
        )
        await FriendState.phone_number.set()


def date_in_1(dp):
    @dp.message_handler(state=FriendState.phone_number)
    async def date_in(message, state):
        await state.update_data(phone_number=message.text)
        await message.answer(
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –ø—Ä–∏–±—ã—Ç–∏—è:\n'
            '–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –≥–≥–≥–≥-–º–º-–¥–¥'
        )
        await FriendState.date_in.set()


def date_out_1(dp):
    @dp.message_handler(state=FriendState.date_in)
    async def date_out(message, state):
        await state.update_data(date_in=message.text)
        await message.answer(
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç–±—ã—Ç–∏—è:\n'
            '–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: –≥–≥–≥–≥-–º–º-–¥–¥'
        )
        await FriendState.date_out.set()


def telegram_1(dp):
    @dp.message_handler(state=FriendState.date_out)
    async def telegram(message, state):
        await state.update_data(date_out=message.text)
        await message.answer(
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegramm\n'
            '–§–æ—Ä–º–∞—Ç: @example'
        )
        await FriendState.telegram.set()


def finish_1(dp):
    @dp.message_handler(state=FriendState.telegram)
    async def finish(message, state):
        await state.update_data(telegram=message.text)

        data = await state.get_data()

        user_id = message.from_user.id
        name = data.get('name')
        country = data.get('country')
        city = data.get('city')
        hotel = data.get('hotel')
        phone_number = data.get('phone_number')
        date_in = data.get('date_in')
        date_out = data.get('date_out')
        telegram = data.get('telegram')

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
        save_find_data(user_id, name, country, city, hotel, phone_number, date_in, date_out, telegram)

        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.finish()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(
            text=f'–í–∞—à–µ –∏–º—è: {name}\n'
                 f'–°—Ç—Ä–∞–Ω–∞: {country}\n'
                 f'–ì–æ—Ä–æ–¥: {city}\n'
                 f'–û—Ç–µ–ª—å: {hotel}\n'
                 f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}\n'
                 f'–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞: {date_in}\n'
                 f'–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞: {date_out}\n'
                 f'Telegram –¥–ª—è —Å–≤—è–∑–∏: {telegram}',
            reply_markup=find_people_keyboard
        )



# –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î –±–∞–ª–∞–Ω—Å–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —á–µ–ª–æ–≤–µ–∫–µ
def save_find_data(user_id, name, country, city, hotel, phone_number, date_in, date_out, telegram):
    connection = sqlite3.connect('database.db')
    cursor = connection.cursor()

    cursor.execute('''
    INSERT INTO Find (user_id, name, country, city, hotel, phone_number, date_in, date_out, telegram)
    VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    ''', (user_id, name, country, city, hotel, phone_number, date_in, date_out, telegram))

    connection.commit()
    connection.close()
